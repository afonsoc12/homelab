labels:
  tier: db
  # label_2: def

podAnnotations: {}
  # annot_1: abc
  # annot_2: def

replicas: 1
revisionHistoryLimit: 0
strategy:
  type: Recreate

image:
  repository: docker.io/influxdb
  tag: 2.7-alpine
#   pullPolicy: Always

command: {}

args: {}

ports:
 - containerPort: 8086
   name: influxdb
   protocol: TCP
   service: true

# Uses ports from .ports section, if service is true
service:
  enabled: true

volumeMounts:
- name: data
  mountPath: /var/lib/influxdb2

volumeClaimTemplates:
- name: data
  accessModes:
  - ReadWriteOnce
  storageClass:  longhorn-persistent
  storage: 10Gi

ingress:
  enabled: true
  authelia: true
  className: "nginx"
  annotations: {}
  tls:
   - secretName: local-wildcard-cert

  # Will assume the first element in .ports, regardless of service
  hosts:
    - host: influxdb.local.{{ .Values.domain }}
      paths:
        - path: /
          pathType: Prefix

# livenessProbe:
#   httpGet:
#     path: "/ping"
#     port: "{{ .Values.ports[0].containerPort }}"
#   initialDelaySeconds: 30
#   timeoutSeconds: 5

# readinessProbe:
#   httpGet:
#     path: "/ping"
#     port: "{{ .Values.ports[0].containerPort }}"
#   initialDelaySeconds: 5
#   timeoutSeconds: 1


resources:
  requests:
    memory: 128Mi
    cpu: 0.2
  limits:
    memory: 1Gi
    cpu: 1

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}

backup:
  enabled: false

