## Argo CD configuration
## Ref: https://github.com/argoproj/argo-cd
##
# -- Provide a name in place of `argocd`
nameOverride: argocd
## Custom resource configuration
crds:
    # -- Install and upgrade CRDs
    install: true
    # -- Keep CRDs on chart uninstall
    keep: true
## Globally shared configuration
global:
    # -- Default domain used by all components
    ## Used for ingresses, certificates, SSO, notifications, etc.
    domain: ENC[AES256_GCM,data:5CvxQsAbfpaOByiu9qzSgOLxO9ymvzbLnHc=,iv:Ebe8RfGHhxCTBlKtN3qbehSEBnB0inUm30fJ7MtcV1c=,tag:1m1CM+Yp8NkAbLyowtURoQ==,type:str]
    # -- Common labels for the all resources
    additionalLabels: {}
    # app: argo-cd
    # -- Number of old deployment ReplicaSets to retain. The rest will be garbage collected.
    revisionHistoryLimit: 3
    # Default logging options used by all components
    logging:
        # -- Set the global logging format. Either: `text` or `json`
        format: text
        # -- Set the global logging level. One of: `debug`, `info`, `warn` or `error`
        level: debug
## Argo Configs
configs:
    # General Argo CD configuration
    ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/argocd-cm.yaml
    cm:
        # -- Create the argocd-cm configmap for [declarative setup]
        create: true
        # Ignore metallb service changes
        resource.customizations.ignoreDifferences.Service: |
            jqPathExpressions:
            - '.spec.clusterIP'
        helm.valuesFileSchemes: secrets+gpg-import, secrets+gpg-import-kubernetes, secrets+age-import, secrets+age-import-kubernetes, secrets,secrets+literal, https
    # Argo CD configuration parameters
    ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/argocd-cmd-params-cm.yaml
    params:
        # -- Create the argocd-cmd-params-cm configmap
        # If false, it is expected the configmap will be created by something else.
        create: true
        ## Server properties
        # -- Run server without TLS
        ## NOTE: This value should be set when you generate params by other means as it changes ports used by ingress template.
        server.insecure: false
        # -- Value for base href in index.html. Used if Argo CD is running behind reverse proxy under subpath different from /
        # server.basehref: /argocd
        # -- Used if Argo CD is running behind reverse proxy under subpath different from /
        # server.rootpath: /argocd
    # ConfigMap for Config Management Plugins
    # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/config-management-plugins/
    cmp:
        # -- Create the argocd-cmp-cm configmap
        create: true
        # -- Annotations to be added to argocd-cmp-cm configmap
        annotations: {}
        # -- Plugin yaml files to be added to argocd-cmp-cm
        plugins: {}
        # https://community.ops.io/jilgue/secrets-in-argocd-with-sops-pa6
        # sops:
        #   init:
        #     command: ["/bin/sh", "-c"]
        #     args: ["if [ -f 'values.sops.yaml' ]; then echo '---' > values.yaml && sops -d --input-type yaml --output-type yaml values.sops.yaml >> values.yaml; fi"]
        #   generate:
        #     command: ["/bin/sh", "-c"]
        #     args: ["cat *.yaml | yq"]
# -- Array of extra K8s manifests to deploy
## Note: Supports use of custom Helm templates
extraObjects: []
# - apiVersion: secrets-store.csi.x-k8s.io/v1
#   kind: SecretProviderClass
#   metadata:
#     name: argocd-secrets-store
#   spec:
#     provider: aws
#     parameters:
#       objects: |
#         - objectName: "argocd"
#           objectType: "secretsmanager"
#           jmesPath:
#               - path: "client_id"
#                 objectAlias: "client_id"
#               - path: "client_secret"
#                 objectAlias: "client_secret"
#     secretObjects:
#     - data:
#       - key: client_id
#         objectName: client_id
#       - key: client_secret
#         objectName: client_secret
#       secretName: argocd-secrets-store
#       type: Opaque
#       labels:
#         app.kubernetes.io/part-of: argocd
## Application controller
controller:
    # -- Application controller name string
    name: application-controller
    # -- The number of application controller pods to run.
    # Additional replicas will cause sharding of managed clusters across number of replicas.
    replicas: 1
## Dex
dex:
    # -- Enable dex
    enabled: false
    # -- Dex name
    name: dex-server
## Redis
redis:
    # -- Enable redis
    enabled: true
    # -- Redis name
    name: redis
    nodeSelector:
        kubernetes.io/hostname: k3s-oci-m3
# External Redis parameters
# externalRedis:
#   # -- External Redis server host
#   host: "redis.databases"
#   # -- External Redis username
#   username: ""
#   # -- External Redis password
#   password: ""
#   # -- External Redis server port
#   port: 6379
#   # -- The name of an existing secret with Redis credentials (must contain key `redis-password`).
#   # When it's set, the `externalRedis.password` parameter is ignored
#   existingSecret: ""
#   # -- External Redis Secret annotations
#   secretAnnotations: {}
## Server
server:
    # -- Argo CD server name
    name: server
    # -- The number of server pods to run
    replicas: 1
    ingress:
        enabled: true
        annotations:
            nginx.ingress.kubernetes.io/backend-protocol: HTTPS
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
            nginx.ingress.kubernetes.io/ssl-passthrough: "true"
            nginx.ingress.kubernetes.io/auth-method: GET
            nginx.ingress.kubernetes.io/auth-url: http://authelia.ingress.svc.cluster.local/api/verify
            nginx.ingress.kubernetes.io/auth-signin: ENC[AES256_GCM,data:yc6e7Arpm1n11ce+rJxbYpFnXv6uuckYfslEPOcpgjYnqGkn1NDH+sdxiEEv,iv:nlVkYa4bkz+RQ7p2ltktb8rmhcXOe/1NhwVhTOixVEo=,tag:iIaBqJL0iARh2b7p/VCusA==,type:str]
            nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
            nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        ingressClassName: nginx
        path: /
        pathType: Prefix
        tls: false
        extraTls:
            - secretName: local-wildcard-cert
## Repo Server
repoServer:
    # -- Repo server name
    name: repo-server
    # -- The number of repo server pods to run
    replicas: 1
    # -- Environment variables to pass to repo server
    env:
        - name: HELM_PLUGINS
          value: /gitops-tools/helm-plugins/
        - name: HELM_SECRETS_CURL_PATH
          value: /gitops-tools/curl
        - name: HELM_SECRETS_SOPS_PATH
          value: /gitops-tools/sops
        - name: HELM_SECRETS_VALS_PATH
          value: /gitops-tools/vals
        - name: HELM_SECRETS_KUBECTL_PATH
          value: /gitops-tools/kubectl
        - name: HELM_SECRETS_BACKEND
          value: sops
        # https://github.com/jkroepke/helm-secrets/wiki/Security-in-shared-environments
        - name: HELM_SECRETS_VALUES_ALLOW_SYMLINKS
          value: "false"
        - name: HELM_SECRETS_VALUES_ALLOW_ABSOLUTE_PATH
          value: "true"
        - name: HELM_SECRETS_VALUES_ALLOW_PATH_TRAVERSAL
          value: "true"
        - name: HELM_SECRETS_WRAPPER_ENABLED
          value: "true"
        - name: HELM_SECRETS_DECRYPT_SECRETS_IN_TMP_DIR
          value: "true"
        - name: HELM_SECRETS_HELM_PATH
          value: /usr/local/bin/helm
        - name: HELM_SECRETS_LOAD_GPG_KEYS
          # Multiple keys can be separated by space
          value: /homelab-sops-gpg/sops.asc
    # -- Init containers to add to the repo server pods
    initContainers:
        - name: download-tools
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -ec
          env:
            - name: HELM_SECRETS_VERSION
              value: 4.6.0
            - name: KUBECTL_VERSION
              value: 1.30.2
            - name: VALS_VERSION
              value: 0.37.3
            - name: SOPS_VERSION
              value: 3.9.0
          args:
            - |
              mkdir -p /gitops-tools/helm-plugins

              GO_ARCH=$(uname -m | sed -e 's/x86_64/amd64/')
              wget -qO /gitops-tools/curl https://github.com/moparisthebest/static-curl/releases/latest/download/curl-${GO_ARCH}

              GO_ARCH=$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/') && \
              wget -qO /gitops-tools/kubectl https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/${GO_ARCH}/kubectl
              wget -qO /gitops-tools/sops https://github.com/getsops/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux.${GO_ARCH}
              wget -qO- https://github.com/helmfile/vals/releases/download/v${VALS_VERSION}/vals_${VALS_VERSION}_linux_${GO_ARCH}.tar.gz | tar zxv -C /gitops-tools vals
              wget -qO- https://github.com/jkroepke/helm-secrets/releases/download/v${HELM_SECRETS_VERSION}/helm-secrets.tar.gz | tar -C /gitops-tools/helm-plugins -xzf-

              chmod +x /gitops-tools/*
              cp /gitops-tools/helm-plugins/helm-secrets/scripts/wrapper/helm.sh /gitops-tools/helm
          volumeMounts:
            - mountPath: /gitops-tools
              name: gitops-tools
    # -- Additional volumeMounts to the repo server main container
    volumeMounts:
        - mountPath: /gitops-tools
          name: gitops-tools
        - mountPath: /usr/local/sbin/helm
          subPath: helm
          name: gitops-tools
        - mountPath: /homelab-sops-gpg/
          name: homelab-sops-gpg
    # -- Additional volumes to the repo server pod
    volumes:
        - name: gitops-tools
          emptyDir: {}
        # kubectl create secret generic homelab-sops-gpg --from-file=sops.asc=assets/gpg/private2.gpg
        - name: homelab-sops-gpg
          secret:
            secretName: homelab-sops-gpg
## ApplicationSet controller
applicationSet:
    # -- Enable ApplicationSet controller
    enabled: true
    # -- ApplicationSet controller name string
    name: applicationset-controller
## Notifications controller
notifications:
    # -- Enable notifications controller
    enabled: true
    # -- Notifications controller name string
    name: notifications-controller
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age: []
    lastmodified: "2024-12-31T13:19:16Z"
    mac: ENC[AES256_GCM,data:Q4Uo6usYrPi5WftGyPSg2TiI28nZ+Ysr9V5bkWTruNbHvMSKnf7OfOl0qV5JNARvmz29hWQODZKqeu4Y37frDqYRC2V3zRASENNxZtae9Jtc2NT9wudBc+jzphd6k4pOL/SQAbQ6p8pjMl9s9H3MFSbkSd6z6JT7ZwyCJI/G+hc=,iv:mxtE3ZDNBHC8u4mkddDyy07NPKRdnOu0SX5QM9GGNkw=,tag:dI/96GZGMD6HffM9Mtg/PQ==,type:str]
    pgp:
        - created_at: "2024-07-21T10:40:47Z"
          enc: |-
            -----BEGIN PGP MESSAGE-----

            hQIMA5NT/LvuRqeGAQ/+O0l7irNn4K28ZkmDVBEvGj7+o2/LHzGTezKxITkQtn3k
            F5Dos0R3Y/pXfqMuV4hjcSBIafB90w8i3RykHIDvcq2NBgQnaE+2BtCKqPcG9spb
            HUHsAflT51nG/XmXxU0IkxWDzcs2Opu7ZbLvK8bTxPww8FWdML/NU7UElGjBZO37
            BosTubAGHArJDeI2T254kM4M7EMHiWGh7wHYvnIRGcf4dqnL56tG5Rhd3QQcN2Br
            lTwA/FxbeIy/fcK0tvCOURusZFX3dfGqPJAKBmssO/GghSTKdyqGGeqYcAcaw98B
            uPWhyHh6KSjjw2LWUl11Y58UtIFafl3vS984xKMnxL0JFth6he+3LxwmDXC9TnWe
            kGB8I6q8bcSNrVWTUatuBbSDxS0EQrqF7fOCmRhr39+T1OtMksMBSjXLhI/JJQWr
            QWehawEhIQayiZ07KbdIVDxzE3TMr/5NVAqY4ERYfnDu4qzDWU2sV7ChtjijepeQ
            ehUIdtxI0qkOeDrI4O819v3VewGiHlLPXKRm88sk4YL8FuA1dzHx/Q3gBjMn+X0p
            3Mi5dFwRI3eU9tH3oJtnJkozwROWxLVHPT+zvMvATJ8agxuyqLLvslcEFMI8wkTs
            lDzjKMXBGHyHig2A4qCBS16+wHoOF5VbwGm4ltQV/G/KgMh7bzxATxqg8flWZPjU
            aAEJAhDw3872JVNAQgtfHYsN7yJM4DWJf2Mc8tjFGqt7drZ4gbFuLnD4JHd8aLZT
            Mwp8sl1/jh9a6FuanToOXtWfXQdudSowI4UaEYxCff56oRzLWkDXASt46u/Q0D1C
            KxQh37EWwLt3
            =gNUK
            -----END PGP MESSAGE-----
          fp: 47E4999BED565F9874AA0E7C05DA03D000FC10D1
    encrypted_regex: ^(domain|nginx.ingress.kubernetes.io/auth-signin)$
    version: 3.9.2
