nameOverride: ""
fullnameOverride: ""

labels: {}
  # label_1: abc
  # label_2: def

podAnnotations: {}
  # annot_1: abc
  # annot_2: def

replicas: 1
revisionHistoryLimit: 0
strategy:
  type: Recreate

image:
  repository: ghcr.io/dgtlmoon/changedetection.io
  tag: latest
  pullPolicy: Always

#   restartPolicy:

command: {}

args: {}

ports:
  - containerPort: 5000
    name: http
    protocol: TCP
    service: true

additionalContainers:
  - name: playwright
    image: browserless/chrome:latest

# Uses ports from .ports section, if service is true
service:
  enabled: true

configmap:
  mountEnv: true
  data:
    BASE_URL: local.{{ .Values.domain }}/changedetection
    FETCH_WORKERS: 8
    USE_X_SETTINGS: 1

volumeMounts:
  - mountPath: /datastore
    name: data

volumes:
- name: data
  mountPvc: yes

pvc:
  storageClassName: longhorn-persistent
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

ingress:
  enabled: true
  authelia: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Host "localhost";
      proxy_set_header X-Forwarded-Prefix /changedetection;
  tls:
   - secretName: local-wildcard-cert

  # Will assume the first element in .ports, regardless of service
  hosts:
    - host: local.{{ .Values.domain }}
      paths:
        - path: /changedetection(/|$)(.*)
          pathType: Prefix


livenessProbe: {}

readinessProbe: {}

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
