nameOverride: ""
fullnameOverride: ""

labels: {}
  # label_1: abc
  # label_2: def

podAnnotations: {}
  # annot_1: abc
  # annot_2: def

replicas: 1
revisionHistoryLimit: 0
strategy:
  type: Recreate

image:
  # repository: nginx
  tag: latest
  pullPolicy: Always

#   restartPolicy:

command: {}

args: {}

ports: []
#  - containerPort: 80
#    name: http
#    protocol: TCP
#    service: true

additionalContainers: []

# Uses ports from .ports section, if service is true
service:
  enabled: false
  type: ClusterIP
  port:

secret: {}
  # stringData:
  #   secret_string_1: abc
  #   secret_string_2: def
  # data:
  #   secret_base64_1: ==a
  #   secret_base64_2: ==b

configmap: {}
  # mountEnv: false
  # data:
  #   config_1: abc
  #   config_2: def

volumeMounts: {}
# - name: config
#   mountPath: "/config"
#   readOnly: true

volumes: {}
# - name: config
#   projected:
#     sources:
#     - configMap:
#         name: authelia-config
#         items:
#         - key: "configuration.yml"
#           path: "configuration.yml"
# - name: config
#   mountPvc: yes

pvc: {}
  # storageClassName: longhorn
  # accessModes:
  # - ReadWriteOnce
  # resources:
  #   requests:
  #     storage: 2Gi

ingress:
  enabled: false
  authelia: false
  className: "nginx"
  annotations: {}
    # nginx.ingress.kubernetes.io/client-max-body-size: "0"
    # nginx.ingress.kubernetes.io/proxy-body-size: "0"
  tls: []
  #  - secretName: mydomain-cert
  #    hosts:
  #      - chart-example.local

  # Will assume the first element in .ports, regardless of service
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific

livenessProbe: {}

readinessProbe: {}

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}

initContainers: []

cronjobs: []
# - name:
#   labels: {}
#   podAnnotations: {}
#   schedule:
#   concurrencyPolicy:
#   failedJobsHistoryLimit:
#   successfulJobsHistoryLimit:
#   suspend:
#   image:
#     # repository: nginx
#     tag: latest
#     pullPolicy: Always
#   restartPolicy:
#   command: {}

#   args: {}

#   ports: []
#   #  - containerPort: 80
#   #    name: http
#   #    protocol: TCP
#   #    service: true

#   volumeMounts: {}
#   # - name: config
#   #   mountPath: "/config"
#   #   readOnly: true

#   volumes: {}
#   # - name: config
#   #   projected:
#   #     sources:
#   #     - configMap:
#   #         name: authelia-config
#   #         items:
#   #         - key: "configuration.yml"
#   #           path: "configuration.yml"

#   livenessProbe: {}

#   readinessProbe: {}

#   resources: {}
#     # limits:
#     #   cpu: 100m
#     #   memory: 128Mi
#     # requests:
#     #   cpu: 100m
#     #   memory: 128Mi

#   podSecurityContext: {}
#     # fsGroup: 2000

#   securityContext: {}
#     # capabilities:
#     #   drop:
#     #   - ALL
#     # readOnlyRootFilesystem: true
#     # runAsNonRoot: true
#     # runAsUser: 1000

#   nodeSelector: {}

#   tolerations: []

#   affinity: {}

dnsConfig: {}
